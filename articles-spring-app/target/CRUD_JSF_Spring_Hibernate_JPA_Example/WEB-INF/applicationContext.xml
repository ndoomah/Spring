<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:flow="http://www.springframework.org/schema/webflow-config"
       xmlns:webflow="http://www.springframework.org/schema/webflow-config"
	xsi:schemaLocation="http://www.springframework.org/schema/beans          
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context 
		   http://www.springframework.org/schema/context/spring-context-3.0.xsd
		   http://www.springframework.org/schema/tx
		   http://www.springframework.org/schema/tx/spring-tx.xsd">
	
    <context:component-scan base-package="br.example"/>
    
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
    	<property name="driverClassName" value="org.postgresql.Driver" />
    	<property name="url" value="jdbc:postgresql://localhost:5432/testdb" />
    	<property name="username" value="postgres" />
    	<property name="password" value="admin123" />
  	</bean>
    
    <bean id="emf" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
    	<property name="packagesToScan" >
            <list>
                <value>br.example.model</value>
            </list>
        </property>
    	
    	<property name="dataSource" ref="dataSource"></property>
    	        
    	<property name="jpaVendorAdapter" ref="jpaVendorAdapter"/>
    	<property name="persistenceUnitName" value="dev" />
    	
    	<property name="jpaProperties">
         <props>
            <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
            <prop key="hibernate.hbm2ddl.auto">update</prop>
            <prop key="hibernate.show_sql">true</prop>
            <prop key="hibernate.format_sql">false</prop>
            <prop key="hibernate.use_sql_comments">false</prop>
            <prop key="hibernate.jdbc.wrap_result_sets">false</prop>
            <prop key="hibernate.hibernate.cache.use_query_cache">true</prop>
         </props>
      </property>
    </bean>
    
    <bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
  		<property name="showSql" value="true"/>
	  	<property name="generateDdl" value="true"/>
  		<property name="databasePlatform" value="org.hibernate.dialect.PostgreSQLDialect"/>
	</bean>
		


	<!--<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.faces.mvc.JsfView" />
		<property name="prefix" value="/articles/" />
		<property name="suffix" value=".xhtml" />
	</bean>-->
    <!--
        Installs a listener that manages JPA persistence contexts for flows
        that require them
    -->
    <bean id="txManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="emf" />
    </bean>

    <bean id="jpaFlowExecutionListener"
          class="org.springframework.webflow.persistence.JpaFlowExecutionListener">
        <constructor-arg ref="emf" />
        <constructor-arg ref="txManager" />
    </bean>

    <!-- Handles requests mapped to the Spring Web Flow system -->
    <bean id="flowController"
          class="org.springframework.webflow.mvc.servlet.FlowController">
        <property name="flowExecutor" ref="flowExecutor" />

    </bean>


    <bean id="articleValidator" class="br.example.validator.ArticleValidator"/>


	<import resource="spring/servlet-context.xml"/>
    <import resource="spring/securityConfig.xml"/>

	<tx:annotation-driven transaction-manager="txManager" proxy-target-class="true" />
</beans>